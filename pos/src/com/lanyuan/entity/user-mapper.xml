<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user">
	<!-- 以下与实体类的中字段一致 -->
	<sql id="selectId">
		userId,
		userName,
		(select r.roleKey from role r where id in (SELECT ur.role_id FROM user_role ur
		WHERE ur.user_id=userId)) roleName,
		userPassword,
		userNickname,
		userRealname,
		userAge,
		userSex,
		userAddress,
		userPhone,
		userMail,
		userQQ,
		userIdCard,
		regTime,
		(select ul.loginTime from userloginlist ul where ul.userId=userId order By ul.loginTime desc limit 1,1) lastLogintime,
		level,
		province,
		city,
		bankName,
		branchBank,
		subbranchBank,
		openBankName,
		bankAccountName,
		bankAccount,
		accountType,
		pay,
		mark,
		status,
		ratesId,
		(select channelname from userrates where userrates.id=ratesId) channelname,
		payMoney,workCosts,afterWorkCosts,tradingRates,settlementCaps,
	    amountMoney,
		parentNumber
	</sql>
	<!--resultType="User" 每返回一条结果封装到User里 -->
	<select id="query" resultType="User" parameterType="java.util.HashMap">
		select
		<include refid="selectId" />
		from user
		<where>
			<if test="t.userName != null and t.userName != ''">
				and userName like '%${t.userName}%'
				</if>
			<if test="t.userNickname != null and t.userNickname != ''">
				and userNickname like '%${t.userNickname}%'
			</if>
			<if test="t.parentNumber != null and t.parentNumber != ''">
				and parentNumber = #{t.parentNumber}
			</if>
			<if test="t.status != null and t.status != ''">
				and status = #{t.status}
			</if>
		</where>
	</select>
	
	<!--resultType="User" 每返回一条结果封装到User里 -->
	<select id="queryChildRates" resultType="Rates" parameterType="java.util.HashMap">
		select
		u.userName,
		r.channelname,
		u.tradingRates,
	    u.settlementCaps,
		r.mark
		from user u,rates r
		<where>
		u.ratesId = r.id
			<if test="t.userName != null and t.userName != ''">
				and u.userName like '%${t.userName}%'
				</if>
			<if test="t.userNickname != null and t.userNickname != ''">
				and u.userNickname like '%${t.userNickname}%'
			</if>
			<if test="t.parentNumber != null and t.parentNumber != ''">
				and u.parentNumber = #{t.parentNumber}
			</if>
		</where>
	</select>
	<select id="countChild" parameterType="User" resultType="int">
		select count(0) from user u,rates r
		<where>
			u.ratesId = r.id
			<if test="t.userName != null and t.userName != ''">
				and u.userName like '%${t.userName}%'
				</if>
			<if test="t.userNickname != null and t.userNickname != ''">
				and u.userNickname like '%${t.userNickname}%'
			</if>
			<if test="t.parentNumber != null and t.parentNumber != ''">
				and u.parentNumber = #{t.parentNumber}
			</if>
		</where>
	</select>
	<!-- 总记录数 -->
	<select id="count" parameterType="User" resultType="int">
		select count(0) from user
		<where>
			<if test="userName != null and userName != ''">
				userName like '%${userName}%'
				</if>
			<if test="userNickname != null and userNickname != ''">
				and userNickname like '%${userNickname}%'
				</if>
				<if test="t.parentNumber != null and t.parentNumber != ''">
				and parentNumber = #{t.parentNumber}
			</if>
		</where>
	</select>
	<!-- 增加用户 -->
	<insert id="add" parameterType="User">
		insert into user ( userName,
		userPassword,
		userNickname, userRealname,
		userAge, userSex, userAddress,
		userPhone,
		userMail, userQQ, userIdCard,level,
		province,
		city,
		bankName,
		branchBank,
		subbranchBank,
		openBankName,
		bankAccountName,
		bankAccount,
		accountType,
		pay,
		mark,
		ratesId,
		payMoney,workCosts,afterWorkCosts,tradingRates,settlementCaps,
		parentNumber )
		values (#{userName},
		#{userPassword},
		#{userNickname}, #{userRealname},
		#{userAge},
		#{userSex},
		#{userAddress}, #{userPhone}, #{userMail},
		#{userQQ},#{userIdCard},
		#{level},
		#{province},
		#{city},
		#{bankName}, #{branchBank},
		#{subbranchBank},
		#{openBankName},
		#{bankAccountName}, #{bankAccount}, #{accountType},
		#{pay},
		#{mark},#{ratesId},
		#{payMoney},#{workCosts},#{afterWorkCosts},#{tradingRates},#{settlementCaps},
		#{parentNumber})
	</insert>

	<delete id="deleteById" parameterType="String">
		delete from user where
		userId=#{userId}
	</delete>
	<select id="getById" parameterType="String" resultType="User">
		select
		<include refid="selectId" />
		from user where userId=#{userId}
	</select>
	<select id="login" parameterType="User" resultType="User">
		select
		<include refid="selectId" />
		from user where userName=#{userName} or userPhone=#{userName} and userPassword=#{userPassword}
	</select>
	<update id="update" parameterType="User">
		update user
		<set>
			<if test="userName != null and userName != ''">
				userName=#{userName},
			</if>
			<if test="userPassword != null and userPassword != ''">
				userPassword=#{userPassword},
			</if>
			<if test="userNickname != null and userNickname != ''">
				userNickname=#{userNickname},
			</if>
			<if test="userRealname != null and userRealname != ''">
				userRealname=#{userRealname},
			</if>
			<if test="userAge != null and userAge != ''">
				userAge=#{userAge},
			</if>
			<if test="userSex != null and userSex != ''">
				userSex=#{userSex},
			</if>
			<if test="userAddress != null and userAddress != ''">
				userAddress=#{userAddress},
			</if>
			<if test="userPhone != null and userPhone != ''">
				userPhone=#{userPhone},
			</if>
			<if test="userMail != null and userMail != ''">
				userMail=#{userMail},
			</if>
			<if test="userQQ != null and userQQ != ''">
				userQQ=#{userQQ},
			</if>
			<if test="userIdCard != null and userIdCard != ''">
				userIdCard=#{userIdCard},
			</if>
			<if test="level != null and level != ''">
				level=#{level},
			</if>
			<if test="province != null and province != ''">
			province=#{province},
			</if>
			<if test="city != null and city != ''">
		city=#{city},
		</if>
		<if test="bankName != null and bankName != ''">
		bankName=#{bankName},
		</if>
		<if test="branchBank != null and branchBank != ''">
		branchBank=#{branchBank},
		</if>
		<if test="subbranchBank != null and subbranchBank != ''">
		subbranchBank=#{subbranchBank},
		</if>
		<if test="openBankName != null and openBankName != ''">
		openBankName=#{openBankName},
		</if>
		<if test="bankAccountName != null and bankAccountName != ''">
		bankAccountName=#{bankAccountName}, 
		</if>
		<if test="bankAccount != null and bankAccount != ''">
		bankAccount=#{bankAccount},
		</if>
		<if test="accountType != null and accountType != ''">
		accountType=#{accountType},
		</if>
		<if test="pay != null and pay != ''">
		pay=#{pay},
		</if>
		<if test="mark != null and mark != ''">
		mark=#{mark},
		</if>
		<if test="status != null and status != ''">
		status=#{status},
		</if>
		<if test="parentNumber != null and parentNumber != ''">
		parentNumber =#{parentNumber},
		</if>
		<if test="ratesId != null and ratesId != ''">
		ratesId =#{ratesId},
		</if>
		<if test="payMoney != null and payMoney != ''">
		payMoney =#{payMoney},
		</if>
		<if test="workCosts != null and workCosts != ''">
		workCosts =#{workCosts},
		</if>
		<if test="afterWorkCosts != null and afterWorkCosts != ''">
		afterWorkCosts =#{afterWorkCosts},
		</if>
		<if test="tradingRates != null and tradingRates != ''">
		tradingRates =#{tradingRates},
		</if>
		<if test="settlementCaps != null and settlementCaps != ''">
		settlementCaps =#{settlementCaps},
		</if>
		<if test="amountMoney != null and amountMoney != ''">
		amountMoney =#{amountMoney}
		</if>
		</set>
		where userId=#{userId}
	</update>
	
	<!-- 验证用户登陆 -->
	<select id="countUser" parameterType="User" resultType="int">
	    select count(*) from user where 
	    userName=#{userName} and userPassword=#{userPassword}
	</select>
	
	<!-- 根据用户名查出userId -->
	<select id="queryUserName" parameterType="String" resultType="User">
	  select
	  <include refid="selectId"/>
	  from user where userName=#{userName} or userPhone=#{userName}
	</select>
	
	<delete id="deleteByPayName" parameterType="String">
		delete from pay where
		userName=#{userName}
	</delete>
	
	<delete id="deleteByPayMentName" parameterType="String">
		delete from payment where
		userName=#{userName}
	</delete>
	<delete id="deleteByUserRatesName" parameterType="String">
		delete from userrates where
		userName=#{userName}
	</delete>
</mapper>